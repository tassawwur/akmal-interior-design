name: Deploy Interior Design Website

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test Backend
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'server/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./server
        run: npm ci
      
      - name: Run linting
        working-directory: ./server
        run: npm run lint
      
      - name: Run tests
        working-directory: ./server
        run: npm test
  
  build:
    name: Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Server
        uses: docker/build-push-action@v3
        with:
          context: ./server
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/interior-design-server:latest
      
      - name: Build and push Client
        uses: docker/build-push-action@v3
        with:
          context: ./client
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/interior-design-client:latest
  
  deploy:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            cd /opt/interior-design
            docker-compose pull
            docker-compose down
            docker-compose up -d
            docker system prune -af
  
  notify:
    name: Send Notifications
    needs: deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Send Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,action,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() 